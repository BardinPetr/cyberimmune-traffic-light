
/*
* Generated by NK-CPP
*/
#ifndef TRAFFICLIGHT_IDIAGNOSTICS_IDL_HPP
#define TRAFFICLIGHT_IDIAGNOSTICS_IDL_HPP

#include <coresrv/sl/sl_api.h>
#include <coresrv/nk/transport-kos.h>
#include <vector>
#include <string>
#include "XNkArena.hpp"
#include "trafficlight/Control.edl.h"
#include "trafficlight/ILightMode.idl.h"

namespace trafficlight {
    using std::vector;

    class IDiagnostics {
    private:
        NkKosTransport *transport;
        nk_iid_t riid;
        XNkArena<trafficlight_IDiagnostics_req_arena_size> reqArena;
        XNkArena<trafficlight_IDiagnostics_res_arena_size> resArena;
    public:

        using DirectionColor = trafficlight_IDiagnostics_DirectionColor;

        IDiagnostics(NkKosTransport *transport, nk_iid_t riid);

        IDiagnostics(NkKosTransport *transport, const char *endpoint_name);

        const trafficlight_IDiagnostics_NotifyFailure_res *
        NotifyFailure(const std::string &severity, nk_uint8_t id, nk_uint32_t requested,
                      const DirectionColor &problem);

        const trafficlight_IDiagnostics_NotifyState_res *
        NotifyState(nk_uint8_t id, const vector<nk_uint32_t> &measured);
    };
};
#endif //TRAFFICLIGHT_IDIAGNOSTICS_IDL_HPP
