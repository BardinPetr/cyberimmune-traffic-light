
/*
* Generated by NK-CPP
*/
#ifndef TRAFFICLIGHT_ITARGETSTATE_IDL_HPP
#define TRAFFICLIGHT_ITARGETSTATE_IDL_HPP
#include <coresrv/sl/sl_api.h>
#include <coresrv/nk/transport-kos.h>
#include <vector>
#include "trafficlight/ITargetState.idl.h"
#include "NkArena.hpp"
namespace trafficlight {
    using std::vector;
    class ITargetState {
    private:
        NkKosTransport *transport;
        nk_iid_t riid;
        NkArena<trafficlight_ITargetState_req_arena_size> reqArena;
        NkArena<trafficlight_ITargetState_res_arena_size> resArena;
    public:
    
        using ModeType = nk_uint32_t;
    
        struct NotifyCurrentStateResponse {
            nk_err_t status;
        
        };
        ITargetState(NkKosTransport *transport, nk_iid_t riid);
        ITargetState(NkKosTransport *transport, const char* endpoint_name);
    
        const trafficlight_ITargetState_NotifyCurrentState_res* NotifyCurrentState(nk_uint8_t id, nk_uint32_t mode);
    };
};
#endif //TRAFFICLIGHT_ITARGETSTATE_IDL_HPP
