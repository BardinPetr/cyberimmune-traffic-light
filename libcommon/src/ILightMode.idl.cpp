
/*
 * Generated by NK-CPP
 */
#include <spdlog/spdlog.h>
#include "ILightMode.idl.hpp"
trafficlight::ILightMode::ILightMode(NkKosTransport *transport, nk_iid_t riid) : transport(transport), riid(riid) {
}
trafficlight::ILightMode::ILightMode(NkKosTransport *transport, const char *endpoint_name) : transport(transport) {
    riid = ServiceLocatorGetRiid(transport->handle, endpoint_name);
    if (INVALID_RIID == riid) {
        spdlog::error("Service RIID {} not found", endpoint_name);
    }
}
    const trafficlight_ILightMode_SetMode_res* trafficlight::ILightMode::SetMode(const CrossedDirectionsMode& mode) {
        trafficlight_ILightMode_SetMode_req req{
            {}, mode
    };
    static trafficlight_ILightMode_SetMode_res res{};
    reqArena.reset();
    resArena.reset();
    nk_req_reset(&req);
    nk_req_reset(&res);
    nk_msg_set_method_id(
            &req,
            this->riid,
            trafficlight_ILightMode_SetMode_mid
    );
    nk_msg_set_method_id(
            &res,
            this->riid,
            trafficlight_ILightMode_SetMode_mid
    );
    nk_msg_set_ncaps(
            &req,
            trafficlight_ILightMode_SetMode_req_handles
    );
    nk_msg_set_ncaps(
            &res,
            trafficlight_ILightMode_SetMode_res_handles
    );
    nk_err_t rc = nk_transport_call(
            &this->transport->base,
            &req.base_,
            nullptr,
            &res.base_,
            nullptr
    );
    
    return &res;
    }
